{"version":3,"sources":["../../rust/pkg/langtons_ant_algorithm_bg.js","components/Board.tsx","components/Footer.tsx","components/Header.tsx","components/App.tsx"],"names":["cachedTextDecoder","TextDecoder","module","require","ignoreBOM","fatal","decode","cachegetUint8Memory0","getStringFromWasm0","ptr","len","buffer","wasm","Uint8Array","subarray","Object","freeze","Dead","Alive","Up","Right","Down","Left","Grid","this","__destroy_into_raw","row","col","obj","create","prototype","width","height","ret","__wrap","__wbindgen_throw","arg0","arg1","Error","cellSpace","cellSize","canvas","context","board","grid","Footer","className","href","target","colorDead","colorAlive","cols","rows","space","Board","stateCellSize","isRunning","useEffect","new","addAnt","document","getElementById","getContext","Array","from","map","x","y","dx","dy","fillStyle","fillRect","loadBoard","console","log","size","state","zoomBoard","setInterval","moveAnts","numChanges","getNumChanges","changes","Uint32Array","memory","getChanges","i","start","id","Header","dispatchCellSize","setIsRunning","onClick","type","reducerCellSize","actions","App","useReducer","useState"],"mappings":"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","file":"static/js/4.b9c68de5.chunk.js","sourcesContent":["import * as wasm from './langtons_ant_algorithm_bg.wasm';\n\nconst lTextDecoder = typeof TextDecoder === 'undefined' ? (0, module.require)('util').TextDecoder : TextDecoder;\n\nlet cachedTextDecoder = new lTextDecoder('utf-8', { ignoreBOM: true, fatal: true });\n\ncachedTextDecoder.decode();\n\nlet cachegetUint8Memory0 = null;\nfunction getUint8Memory0() {\n    if (cachegetUint8Memory0 === null || cachegetUint8Memory0.buffer !== wasm.memory.buffer) {\n        cachegetUint8Memory0 = new Uint8Array(wasm.memory.buffer);\n    }\n    return cachegetUint8Memory0;\n}\n\nfunction getStringFromWasm0(ptr, len) {\n    return cachedTextDecoder.decode(getUint8Memory0().subarray(ptr, ptr + len));\n}\n/**\n*/\nexport const Cell = Object.freeze({ Dead:0,\"0\":\"Dead\",Alive:1,\"1\":\"Alive\", });\n/**\n*/\nexport const Movement = Object.freeze({ Up:0,\"0\":\"Up\",Right:1,\"1\":\"Right\",Down:2,\"2\":\"Down\",Left:3,\"3\":\"Left\", });\n/**\n*/\nexport class Ant {\n\n    __destroy_into_raw() {\n        const ptr = this.ptr;\n        this.ptr = 0;\n\n        return ptr;\n    }\n\n    free() {\n        const ptr = this.__destroy_into_raw();\n        wasm.__wbg_ant_free(ptr);\n    }\n}\n/**\n*/\nexport class Grid {\n\n    static __wrap(ptr) {\n        const obj = Object.create(Grid.prototype);\n        obj.ptr = ptr;\n\n        return obj;\n    }\n\n    __destroy_into_raw() {\n        const ptr = this.ptr;\n        this.ptr = 0;\n\n        return ptr;\n    }\n\n    free() {\n        const ptr = this.__destroy_into_raw();\n        wasm.__wbg_grid_free(ptr);\n    }\n    /**\n    * @param {number} width\n    * @param {number} height\n    * @returns {Grid}\n    */\n    static new(width, height) {\n        var ret = wasm.grid_new(width, height);\n        return Grid.__wrap(ret);\n    }\n    /**\n    * @returns {number}\n    */\n    getChanges() {\n        var ret = wasm.grid_getChanges(this.ptr);\n        return ret;\n    }\n    /**\n    * @returns {number}\n    */\n    getNumChanges() {\n        var ret = wasm.grid_getNumChanges(this.ptr);\n        return ret >>> 0;\n    }\n    /**\n    * @returns {number}\n    */\n    getAnts() {\n        var ret = wasm.grid_getAnts(this.ptr);\n        return ret;\n    }\n    /**\n    * @param {number} row\n    * @param {number} col\n    */\n    addAnt(row, col) {\n        wasm.grid_addAnt(this.ptr, row, col);\n    }\n    /**\n    */\n    moveAnts() {\n        wasm.grid_moveAnts(this.ptr);\n    }\n}\n\nexport function __wbindgen_throw(arg0, arg1) {\n    throw new Error(getStringFromWasm0(arg0, arg1));\n};\n\n","import { useEffect } from \"react\"\r\nimport { memory } from \"langtons-ant-algorithm/langtons_ant_algorithm_bg.wasm\"\r\nimport { Grid } from \"langtons-ant-algorithm\"\r\n\r\nconst colorDead = \"#FFFFFF\"\r\nconst colorAlive = \"#000000\"\r\nconst cols = 180\r\nconst rows = 130\r\nconst space = 0.5\r\nlet cellSpace: number\r\nlet cellSize: number\r\nlet canvas: HTMLCanvasElement\r\nlet context: CanvasRenderingContext2D\r\nlet board: Array<Array<number>>\r\nlet grid: Grid\r\n\r\nconst start = () => {\r\n  grid.moveAnts()\r\n  const numChanges = grid.getNumChanges()\r\n  let changes = new Uint32Array(memory.buffer, grid.getChanges(), numChanges)\r\n  for (let i = 0; i < numChanges; i++) {\r\n    const row = changes[i]\r\n    const col = changes[i + 1]\r\n    const state = board[row][col] ? 0 : 1\r\n    board[row][col] = state\r\n    context.fillStyle = state ? colorAlive : colorDead\r\n    const dx = cellSpace * col + space\r\n    const dy = cellSpace * row + space\r\n    context.fillRect(dx, dy, cellSize, cellSize)\r\n  }\r\n}\r\n\r\nconst zoomBoard = () => {\r\n  cellSpace = cellSize + space\r\n  canvas.width = cellSpace * cols + space\r\n  canvas.height = cellSpace * rows + space\r\n  for (let x = 0; x < cols; x++) {\r\n    for (let y = 0; y < rows; y++) {\r\n      const state = board[y][x]\r\n      context.fillStyle = state ? colorAlive : colorDead\r\n      const dx = cellSpace * x + space\r\n      const dy = cellSpace * y + space\r\n      context.fillRect(dx, dy, cellSize, cellSize)\r\n    }\r\n  }\r\n}\r\n\r\nconst loadBoard = () => {\r\n  grid = Grid.new(rows, cols)\r\n  grid.addAnt(65, 90)\r\n  canvas = document.getElementById(\"canvas\") as HTMLCanvasElement\r\n  context = canvas.getContext(\"2d\") as CanvasRenderingContext2D\r\n  board = Array.from(new Array(cols)).map(row => new Array(rows)) as Array<Array<number>>\r\n  cellSpace = cellSize + space\r\n  canvas.width = cellSpace * cols + space\r\n  canvas.height = cellSpace * rows + space\r\n  for (let x = 0; x < cols; x++) {\r\n    for (let y = 0; y < rows; y++) {\r\n      board[y][x] = 0\r\n      const dx = cellSpace * x + space\r\n      const dy = cellSpace * y + space\r\n      context.fillStyle = colorDead\r\n      context.fillRect(dx, dy, cellSize, cellSize)\r\n    }\r\n  }\r\n}\r\n\r\nconst Board = ({ stateCellSize, isRunning }: { stateCellSize: any; isRunning: boolean }) => {\r\n  useEffect(() => {\r\n    cellSize = 3\r\n    loadBoard()\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    console.log(\"CAMBIA\", stateCellSize.size)\r\n    cellSize = stateCellSize.size\r\n    zoomBoard()\r\n  }, [stateCellSize])\r\n\r\n  useEffect(() => {\r\n    console.log(\"run\", isRunning)\r\n    setInterval(() => start(), 1)\r\n  }, [isRunning])\r\n\r\n  return (\r\n    <main>\r\n      <section className=\"information\">\r\n        <ul>\r\n          <li>Ants: 1</li>\r\n          <li>Generation: 1959</li>\r\n          <li>Cells: 10</li>\r\n        </ul>\r\n      </section>\r\n      <section className=\"container\">\r\n        <div className=\"game-wrapper\">\r\n          <canvas id=\"canvas\"></canvas>\r\n        </div>\r\n      </section>\r\n    </main>\r\n  )\r\n}\r\n\r\nexport default Board\r\n","import { FaUserCircle } from \"react-icons/fa\"\r\nimport { AiFillGithub, AiOutlineTwitter } from \"react-icons/ai\"\r\n\r\nconst Footer = () => {\r\n  return (\r\n    <footer>\r\n      <section className=\"footer-container\">\r\n        <h3>By Alan Arriaga</h3>\r\n        <div className=\"options\">\r\n          <a href=\"https://github.com/A14Narriaga\" target=\"blank\">\r\n            <AiFillGithub />\r\n          </a>\r\n          <a href=\"https://a14narriaga.netlify.app/\" target=\"blank\">\r\n            <FaUserCircle />\r\n          </a>\r\n          <a href=\"https://twitter.com/A14Narriaga\" target=\"blank\">\r\n            <AiOutlineTwitter />\r\n          </a>\r\n        </div>\r\n      </section>\r\n    </footer>\r\n  )\r\n}\r\n\r\nexport default Footer\r\n","import { FaRegEdit, FaRegPlayCircle, FaRegPauseCircle } from \"react-icons/fa\"\r\nimport { BiZoomIn, BiZoomOut } from \"react-icons/bi\"\r\nimport { HiOutlineFolderDownload } from \"react-icons/hi\"\r\nimport { AiOutlineAreaChart, AiOutlineReload } from \"react-icons/ai\"\r\nimport { GiAnt } from \"react-icons/gi\"\r\n\r\nconst Header = ({\r\n  dispatchCellSize,\r\n  isRunning,\r\n  setIsRunning,\r\n}: {\r\n  dispatchCellSize: any\r\n  isRunning: boolean\r\n  setIsRunning: any\r\n}) => {\r\n\r\n  return (\r\n    <header>\r\n      <section className=\"header-container\">\r\n        <h1>Langton's ant</h1>\r\n        <div className=\"options\">\r\n          <li>\r\n            <a href=\"#!\">\r\n              <AiOutlineReload />\r\n            </a>\r\n          </li>\r\n          <li onClick={() => setIsRunning(isRunning ? false : true)}>\r\n            <a href=\"#!\">{isRunning ? <FaRegPauseCircle /> : <FaRegPlayCircle />}</a>\r\n          </li>\r\n          <li onClick={() => dispatchCellSize({ type: \"zoomIn\" })}>\r\n            <a href=\"#!\">\r\n              <BiZoomIn />\r\n            </a>\r\n          </li>\r\n          <li onClick={() => dispatchCellSize({ type: \"zoomOut\" })}>\r\n            <a href=\"#!\">\r\n              <BiZoomOut />\r\n            </a>\r\n          </li>\r\n          <li>\r\n            <a href=\"#!\">\r\n              <GiAnt />\r\n            </a>\r\n          </li>\r\n          <li>\r\n            <a href=\"#!\">\r\n              <HiOutlineFolderDownload />\r\n            </a>\r\n          </li>\r\n          <li>\r\n            <a href=\"#!\">\r\n              <FaRegEdit />\r\n            </a>\r\n          </li>\r\n          <li>\r\n            <a href=\"#!\">\r\n              <AiOutlineAreaChart />\r\n            </a>\r\n          </li>\r\n        </div>\r\n      </section>\r\n    </header>\r\n  )\r\n}\r\n\r\nexport default Header\r\n","import { useReducer, useState } from \"react\"\r\nimport \"../scss/App.scss\"\r\nimport Footer from \"./Footer\"\r\nimport Board from \"./Board\"\r\nimport Header from \"./Header\"\r\n\r\nconst reducerCellSize = (state: any, actions: any) => {\r\n  switch (actions.type) {\r\n    case \"zoomIn\":\r\n      return { size: state.size + 1 }\r\n    case \"zoomOut\":\r\n      return { size: state.size === 1 ? state.size : state.size - 1 }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nconst App = () => {\r\n  const [stateCellSize, dispatchCellSize] = useReducer(reducerCellSize, { size: 3 })\r\n  const [isRunning, setIsRunning] = useState(true)\r\n  return (\r\n    <>\r\n      <Header \r\n        dispatchCellSize={dispatchCellSize}\r\n        isRunning={isRunning}\r\n        setIsRunning={setIsRunning}\r\n      />\r\n      <Board \r\n        stateCellSize={stateCellSize}\r\n        isRunning={isRunning}\r\n      />\r\n      <Footer />\r\n    </>\r\n  )\r\n}\r\n\r\nexport default App\r\n"],"sourceRoot":""}