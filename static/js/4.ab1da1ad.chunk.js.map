{"version":3,"sources":["../../rust/pkg/langtons_ant_algorithm_bg.js","components/Board.tsx","components/Footer.tsx","components/Header.tsx","components/Config.tsx","components/AddAnt.tsx","components/App.tsx"],"names":["cachedTextDecoder","TextDecoder","module","require","ignoreBOM","fatal","decode","cachegetUint8Memory0","getStringFromWasm0","ptr","len","buffer","wasm","Uint8Array","subarray","Object","freeze","Dead","Alive","Up","Right","Down","Left","Grid","this","__destroy_into_raw","row","col","obj","create","prototype","width","height","ret","__wrap","__wbindgen_throw","arg0","arg1","Error","colorDead","cellSpace","cellSize","canvas","context","board","grid","Footer","className","href","target","colorAlive","cols","rows","reloadBoard","x","y","state","fillStyle","dx","dy","fillRect","Board","stateCellSize","isRunning","reload","toroide","backgroundColor","useEffect","rs","cs","console","log","new","addAnt","document","getElementById","getContext","Array","from","map","loadBoard","size","setInterval","moveAnts","numChanges","getNumChanges","changes","Uint32Array","memory","getChanges","i","start","id","Header","dispatchCellSize","setIsRunning","setReload","setShowConfig","setShowAddAnt","onClick","running","type","Config","setRows","setCols","setToroide","setBackgroundColor","useState","newRows","setNewRows","newCols","setNewCols","newBgColor","setNewBgColor","htmlFor","value","onChange","e","Number","toast","error","position","theme","autoClose","hideProgressBar","newestOnTop","closeOnClick","rtl","pauseOnFocusLoss","draggable","pauseOnHover","AddAnt","reducerCellSize","actions","App","useReducer","showConfig","showAddAnt"],"mappings":"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","file":"static/js/4.ab1da1ad.chunk.js","sourcesContent":["import * as wasm from './langtons_ant_algorithm_bg.wasm';\n\nconst lTextDecoder = typeof TextDecoder === 'undefined' ? (0, module.require)('util').TextDecoder : TextDecoder;\n\nlet cachedTextDecoder = new lTextDecoder('utf-8', { ignoreBOM: true, fatal: true });\n\ncachedTextDecoder.decode();\n\nlet cachegetUint8Memory0 = null;\nfunction getUint8Memory0() {\n    if (cachegetUint8Memory0 === null || cachegetUint8Memory0.buffer !== wasm.memory.buffer) {\n        cachegetUint8Memory0 = new Uint8Array(wasm.memory.buffer);\n    }\n    return cachegetUint8Memory0;\n}\n\nfunction getStringFromWasm0(ptr, len) {\n    return cachedTextDecoder.decode(getUint8Memory0().subarray(ptr, ptr + len));\n}\n/**\n*/\nexport const Cell = Object.freeze({ Dead:0,\"0\":\"Dead\",Alive:1,\"1\":\"Alive\", });\n/**\n*/\nexport const Movement = Object.freeze({ Up:0,\"0\":\"Up\",Right:1,\"1\":\"Right\",Down:2,\"2\":\"Down\",Left:3,\"3\":\"Left\", });\n/**\n*/\nexport class Ant {\n\n    __destroy_into_raw() {\n        const ptr = this.ptr;\n        this.ptr = 0;\n\n        return ptr;\n    }\n\n    free() {\n        const ptr = this.__destroy_into_raw();\n        wasm.__wbg_ant_free(ptr);\n    }\n}\n/**\n*/\nexport class Grid {\n\n    static __wrap(ptr) {\n        const obj = Object.create(Grid.prototype);\n        obj.ptr = ptr;\n\n        return obj;\n    }\n\n    __destroy_into_raw() {\n        const ptr = this.ptr;\n        this.ptr = 0;\n\n        return ptr;\n    }\n\n    free() {\n        const ptr = this.__destroy_into_raw();\n        wasm.__wbg_grid_free(ptr);\n    }\n    /**\n    * @param {number} width\n    * @param {number} height\n    * @returns {Grid}\n    */\n    static new(width, height) {\n        var ret = wasm.grid_new(width, height);\n        return Grid.__wrap(ret);\n    }\n    /**\n    * @returns {number}\n    */\n    getChanges() {\n        var ret = wasm.grid_getChanges(this.ptr);\n        return ret;\n    }\n    /**\n    * @returns {number}\n    */\n    getNumChanges() {\n        var ret = wasm.grid_getNumChanges(this.ptr);\n        return ret >>> 0;\n    }\n    /**\n    * @returns {number}\n    */\n    getAnts() {\n        var ret = wasm.grid_getAnts(this.ptr);\n        return ret;\n    }\n    /**\n    * @param {number} row\n    * @param {number} col\n    */\n    addAnt(row, col) {\n        wasm.grid_addAnt(this.ptr, row, col);\n    }\n    /**\n    */\n    moveAnts() {\n        wasm.grid_moveAnts(this.ptr);\n    }\n}\n\nexport function __wbindgen_throw(arg0, arg1) {\n    throw new Error(getStringFromWasm0(arg0, arg1));\n};\n\n","import { useEffect } from \"react\"\r\nimport { memory } from \"langtons-ant-algorithm/langtons_ant_algorithm_bg.wasm\"\r\nimport { Grid } from \"langtons-ant-algorithm\"\r\n\r\nconst colorAlive = \"#000000\"\r\nconst cols = 180\r\nconst rows = 130\r\nconst space = 1\r\nlet colorDead: string\r\nlet cellSpace: number\r\nlet cellSize: number\r\nlet canvas: HTMLCanvasElement\r\nlet context: CanvasRenderingContext2D\r\nlet board: Array<Array<number>>\r\nlet grid: Grid\r\n\r\nconst start = () => {\r\n  grid.moveAnts()\r\n  const numChanges = grid.getNumChanges()\r\n  let changes = new Uint32Array(memory.buffer, grid.getChanges(), numChanges)\r\n  for (let i = 0; i < numChanges; i++) {\r\n    const row = changes[i]\r\n    const col = changes[i + 1]\r\n    const state = board[row][col] ? 0 : 1\r\n    board[row][col] = state\r\n    context.fillStyle = state ? colorAlive : colorDead\r\n    const dx = cellSpace * col + space\r\n    const dy = cellSpace * row + space\r\n    context.fillRect(dx, dy, cellSize, cellSize)\r\n  }\r\n}\r\n\r\nconst reloadBoard = () => {\r\n  cellSpace = cellSize + space\r\n  canvas.width = cellSpace * cols + space\r\n  canvas.height = cellSpace * rows + space\r\n  for (let x = 0; x < cols; x++) {\r\n    for (let y = 0; y < rows; y++) {\r\n      const state = board[y][x]\r\n      context.fillStyle = state ? colorAlive : colorDead\r\n      const dx = cellSpace * x + space\r\n      const dy = cellSpace * y + space\r\n      context.fillRect(dx, dy, cellSize, cellSize)\r\n    }\r\n  }\r\n}\r\n\r\nconst loadBoard = (rs: number, cs: number, toroide: boolean) => {\r\n  console.log(rs, cs, toroide, colorDead)\r\n  grid = Grid.new(rows, cols)\r\n  grid.addAnt(65, 90)\r\n  canvas = document.getElementById(\"canvas\") as HTMLCanvasElement\r\n  context = canvas.getContext(\"2d\") as CanvasRenderingContext2D\r\n  board = Array.from(new Array(cols)).map(row => new Array(rows)) as Array<Array<number>>\r\n  cellSpace = cellSize + space\r\n  canvas.width = cellSpace * cols + space\r\n  canvas.height = cellSpace * rows + space\r\n  for (let x = 0; x < cols; x++) {\r\n    for (let y = 0; y < rows; y++) {\r\n      board[y][x] = 0\r\n      const dx = cellSpace * x + space\r\n      const dy = cellSpace * y + space\r\n      context.fillStyle = colorDead\r\n      context.fillRect(dx, dy, cellSize, cellSize)\r\n    }\r\n  }\r\n}\r\n\r\nconst Board = ({\r\n  stateCellSize,\r\n  isRunning,\r\n  reload,\r\n  rows,\r\n  cols,\r\n  toroide,\r\n  backgroundColor,\r\n}: {\r\n  stateCellSize: any\r\n  isRunning: boolean\r\n  reload: boolean\r\n  rows: number\r\n  cols: number\r\n  toroide: boolean\r\n  backgroundColor: string\r\n}) => {\r\n  useEffect(() => {\r\n    loadBoard(rows, cols, toroide)\r\n  }, [reload, rows, cols, toroide])\r\n\r\n  useEffect(() => {\r\n\t\tconsole.log(backgroundColor);\r\n    colorDead = backgroundColor\r\n    reloadBoard()\r\n  }, [backgroundColor])\r\n\r\n  useEffect(() => {\r\n    cellSize = stateCellSize.size\r\n    reloadBoard()\r\n  }, [stateCellSize])\r\n\r\n  useEffect(() => {\r\n    setInterval(() => start(), 1)\r\n  }, [isRunning])\r\n\r\n  return (\r\n    <main>\r\n      <section className=\"information\">\r\n        <ul>\r\n          <li>Ants: 1</li>\r\n          <li>Generation: 1959</li>\r\n          <li>Cells: 10</li>\r\n        </ul>\r\n      </section>\r\n      <section className=\"container\">\r\n        <div className=\"game-wrapper\">\r\n          <canvas id=\"canvas\"></canvas>\r\n        </div>\r\n      </section>\r\n    </main>\r\n  )\r\n}\r\n\r\nexport default Board\r\n","import { FaUserCircle } from \"react-icons/fa\"\r\nimport { AiFillGithub, AiOutlineTwitter } from \"react-icons/ai\"\r\n\r\nconst Footer = () => {\r\n  return (\r\n    <footer>\r\n      <section className=\"footer-container\">\r\n        <h3>By Alan Arriaga</h3>\r\n        <div className=\"options\">\r\n          <a href=\"https://github.com/A14Narriaga\" target=\"blank\">\r\n            <AiFillGithub />\r\n          </a>\r\n          <a href=\"https://a14narriaga.netlify.app/\" target=\"blank\">\r\n            <FaUserCircle />\r\n          </a>\r\n          <a href=\"https://twitter.com/A14Narriaga\" target=\"blank\">\r\n            <AiOutlineTwitter />\r\n          </a>\r\n        </div>\r\n      </section>\r\n    </footer>\r\n  )\r\n}\r\n\r\nexport default Footer\r\n","import { FaRegPlayCircle, FaRegPauseCircle } from \"react-icons/fa\"\r\nimport { BiZoomIn, BiZoomOut } from \"react-icons/bi\"\r\nimport { AiOutlineAreaChart, AiOutlineReload } from \"react-icons/ai\"\r\nimport { VscSettingsGear } from \"react-icons/vsc\"\r\nimport { HiOutlineFolderDownload } from \"react-icons/hi\"\r\nimport { GiAnt } from \"react-icons/gi\"\r\n\r\nconst Header = ({\r\n  dispatchCellSize,\r\n  isRunning,\r\n  setIsRunning,\r\n  setReload,\r\n  setShowConfig,\r\n\tsetShowAddAnt\r\n}: {\r\n  dispatchCellSize: any\r\n  isRunning: boolean\r\n  setIsRunning: any\r\n  setReload: any\r\n  setShowConfig: any\r\n\tsetShowAddAnt: any\r\n}) => {\r\n  return (\r\n    <header>\r\n      <section className=\"header-container\">\r\n        <h1>Langton's ant</h1>\r\n        <div className=\"options\">\r\n          <li onClick={() => setReload((reload: boolean) => (reload ? false : true))}>\r\n            <a href=\"#!\">\r\n              <AiOutlineReload />\r\n            </a>\r\n          </li>\r\n          <li onClick={() => setIsRunning((running: boolean) => (running ? false : true))}>\r\n            <a href=\"#!\">{isRunning ? <FaRegPauseCircle /> : <FaRegPlayCircle />}</a>\r\n          </li>\r\n          <li onClick={() => dispatchCellSize({ type: \"zoomIn\" })}>\r\n            <a href=\"#!\">\r\n              <BiZoomIn />\r\n            </a>\r\n          </li>\r\n          <li onClick={() => dispatchCellSize({ type: \"zoomOut\" })}>\r\n            <a href=\"#!\">\r\n              <BiZoomOut />\r\n            </a>\r\n          </li>\r\n\t\t\t\t\t<li onClick={() => setShowAddAnt(true)} >\r\n            <a href=\"#!\">\r\n              <GiAnt />\r\n            </a>\r\n          </li>\r\n\t\t\t\t\t<li>\r\n            <a href=\"#!\">\r\n              <HiOutlineFolderDownload />\r\n            </a>\r\n          </li>\r\n          <li>\r\n            <a href=\"#!\">\r\n              <AiOutlineAreaChart />\r\n            </a>\r\n          </li>\r\n          <li onClick={() => setShowConfig(true)}>\r\n            <a href=\"#!\">\r\n              <VscSettingsGear />\r\n            </a>\r\n          </li>\r\n        </div>\r\n      </section>\r\n    </header>\r\n  )\r\n}\r\n\r\nexport default Header\r\n","import { useState } from \"react\"\r\nimport { ToastContainer, toast } from \"react-toastify\"\r\nimport \"react-toastify/dist/ReactToastify.css\"\r\n\r\nconst Config = ({\r\n  setShowConfig,\r\n  rows,\r\n  setRows,\r\n  cols,\r\n  setCols,\r\n  toroide,\r\n  setToroide,\r\n  backgroundColor,\r\n  setBackgroundColor,\r\n}: {\r\n  setShowConfig: any\r\n  rows: number\r\n  setRows: any\r\n  cols: number\r\n  setCols: any\r\n  setToroide: any\r\n  toroide: boolean\r\n  backgroundColor: string\r\n  setBackgroundColor: any\r\n}) => {\r\n  const [newRows, setNewRows] = useState(rows)\r\n  const [newCols, setNewCols] = useState(cols)\r\n  const [newBgColor, setNewBgColor] = useState(backgroundColor)\r\n\r\n  const saveInfo = () => {\r\n    if (!(newRows > 0 && newRows < 1001)) {\r\n      toast.error(\"Row value ​​must be greater than 0 and less than 1001\")\r\n      return\r\n    }\r\n    if (!(newCols > 0 && newCols < 1001)) {\r\n      toast.error(\"Col value ​​must be greater than 0 and less than 1001\")\r\n      return\r\n    }\r\n    setRows(newRows)\r\n    setCols(newCols)\r\n    setBackgroundColor(newBgColor)\r\n    setShowConfig(false)\r\n    toast(\"Board updated\")\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <section className=\"config\">\r\n        <div className=\"config-wrapper\">\r\n          <section className=\"config-header\">\r\n            <h1>Configuration</h1>\r\n          </section>\r\n          <section className=\"config-row\">\r\n            <div className=\"input-type\">\r\n              <label htmlFor=\"rows\">Rows:</label>\r\n              <input\r\n                id=\"rows\"\r\n                type=\"number\"\r\n                value={newRows}\r\n                onChange={e => setNewRows(Number(e.target.value))}\r\n              />\r\n            </div>\r\n            <div className=\"input-type\">\r\n              <label htmlFor=\"cols\">Cols:</label>\r\n              <input\r\n                id=\"cols\"\r\n                type=\"number\"\r\n                value={newCols}\r\n                onChange={e => setNewCols(Number(e.target.value))}\r\n              />\r\n            </div>\r\n          </section>\r\n          <section className=\"config-row\">\r\n            <label htmlFor=\"plan\">Plan:</label>\r\n            <button\r\n              className={`${toroide ? \"\" : \"btn-disable\"} space opc-plan`}\r\n              onClick={() => setToroide(true)}\r\n            >\r\n              Toroide\r\n            </button>\r\n            <button\r\n              className={`${toroide ? \"btn-disable\" : \"\"} opc-plan`}\r\n              onClick={() => setToroide(false)}\r\n            >\r\n              Limitado\r\n            </button>\r\n          </section>\r\n          <section className=\"config-row\">\r\n            <label htmlFor=\"background\">Background:</label>\r\n            <input\r\n              type=\"color\"\r\n              id=\"background\"\r\n              value={newBgColor}\r\n              onChange={e => setNewBgColor(e.target.value)}\r\n            />\r\n          </section>\r\n          <button className=\"config-btn-acept\" onClick={saveInfo}>\r\n            Acept\r\n          </button>\r\n        </div>\r\n      </section>\r\n      <ToastContainer\r\n        position=\"bottom-center\"\r\n\t\t\t\ttheme=\"colored\"\r\n        autoClose={3000}\r\n        hideProgressBar={false}\r\n        newestOnTop={false}\r\n        closeOnClick\r\n        rtl={false}\r\n        pauseOnFocusLoss\r\n        draggable\r\n        pauseOnHover\r\n      />\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Config\r\n","import { GiAnt } from \"react-icons/gi\"\r\n\r\nconst AddAnt = () => {\r\n  return (\r\n    <section className=\"add-ant\">\r\n      <div className=\"ant-wrapper\">\r\n        <section className=\"config-ant\">\r\n          <button className=\"space config-position-ant\">\r\n            <GiAnt id=\"ant\" />\r\n          </button>\r\n          <input className=\"space\" type=\"color\" id=\"ant-color\" />\r\n          <label htmlFor=\"x\">x: </label>\r\n          <input className=\"space coordeanate\" type=\"number\" id=\"x\" />\r\n          <label htmlFor=\"y\">y: </label>\r\n          <input className=\"space coordeanate\" type=\"number\" id=\"y\" />\r\n        </section>\r\n\t\t\t\t<button className=\"config-add-ant\">Add</button>\r\n      </div>\r\n    </section>\r\n  )\r\n}\r\n\r\nexport default AddAnt\r\n","import { useReducer, useState } from \"react\"\r\nimport \"../scss/App.scss\"\r\nimport Footer from \"./Footer\"\r\nimport Board from \"./Board\"\r\nimport Header from \"./Header\"\r\nimport Config from \"./Config\"\r\nimport AddAnt from \"./AddAnt\"\r\n\r\nconst reducerCellSize = (state: any, actions: any) => {\r\n  switch (actions.type) {\r\n    case \"zoomIn\":\r\n      return { size: state.size + 1 }\r\n    case \"zoomOut\":\r\n      return { size: state.size === 1 ? state.size : state.size - 1 }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nconst App = () => {\r\n  const [stateCellSize, dispatchCellSize] = useReducer(reducerCellSize, { size: 3 })\r\n  const [isRunning, setIsRunning] = useState(true)\r\n  const [reload, setReload] = useState(false)\r\n  const [showConfig, setShowConfig] = useState(false)\r\n  const [showAddAnt, setShowAddAnt] = useState(false)\r\n  const [rows, setRows] = useState(10)\r\n  const [cols, setCols] = useState(20)\r\n  const [toroide, setToroide] = useState(false)\r\n  const [backgroundColor, setBackgroundColor] = useState(\"#c5c5c5\")\r\n  return (\r\n    <>\r\n      <Header\r\n        dispatchCellSize={dispatchCellSize}\r\n        isRunning={isRunning}\r\n        setIsRunning={setIsRunning}\r\n        setReload={setReload}\r\n        setShowConfig={setShowConfig}\r\n\t\t\t\tsetShowAddAnt={setShowAddAnt}\r\n      />\r\n      <Board\r\n        stateCellSize={stateCellSize}\r\n        isRunning={isRunning}\r\n        reload={reload}\r\n        rows={rows}\r\n        cols={cols}\r\n        toroide={toroide}\r\n        backgroundColor={backgroundColor}\r\n      />\r\n      <Footer />\r\n      {showConfig && (\r\n        <Config\r\n          setShowConfig={setShowConfig}\r\n\t\t\t\t\trows={rows}\r\n          setRows={setRows}\r\n\t\t\t\t\tcols={cols}\r\n          setCols={setCols}\r\n          setToroide={setToroide}\r\n\t\t\t\t\ttoroide={toroide}\r\n\t\t\t\t\tbackgroundColor={backgroundColor}\r\n          setBackgroundColor={setBackgroundColor}\r\n        />\r\n      )}\r\n\t\t\t{showAddAnt && (\r\n        <AddAnt\r\n\t\t\t\t\r\n\t\t\t\t/>\r\n      )}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default App\r\n"],"sourceRoot":""}