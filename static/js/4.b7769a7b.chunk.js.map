{"version":3,"sources":["../../rust/pkg/langtons_ant_algorithm_bg.js","components/Board.tsx","components/Footer.tsx","components/Header.tsx","components/App.tsx"],"names":["cachedTextDecoder","TextDecoder","module","require","ignoreBOM","fatal","decode","cachegetUint8Memory0","getStringFromWasm0","ptr","len","buffer","wasm","Uint8Array","subarray","Object","freeze","Dead","Alive","Up","Right","Down","Left","Grid","this","__destroy_into_raw","row","col","obj","create","prototype","width","height","ret","__wrap","__wbindgen_throw","arg0","arg1","Error","cellSpace","cellSize","canvas","context","board","grid","Footer","className","href","target","colorDead","cols","rows","space","loadGame","new","addAnt","document","getElementById","getContext","Array","from","map","x","y","dx","dy","fillStyle","fillRect","setInterval","moveAnts","numChanges","getNumChanges","changes","Uint32Array","memory","getChanges","i","state","startGame","Game","stateCellSize","useEffect","size","id","Header","dispatchCellSize","useState","isRunning","setIsRunning","onClick","type","reducerCellSize","actions","App","useReducer","Board"],"mappings":"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","file":"static/js/4.b7769a7b.chunk.js","sourcesContent":["import * as wasm from './langtons_ant_algorithm_bg.wasm';\n\nconst lTextDecoder = typeof TextDecoder === 'undefined' ? (0, module.require)('util').TextDecoder : TextDecoder;\n\nlet cachedTextDecoder = new lTextDecoder('utf-8', { ignoreBOM: true, fatal: true });\n\ncachedTextDecoder.decode();\n\nlet cachegetUint8Memory0 = null;\nfunction getUint8Memory0() {\n    if (cachegetUint8Memory0 === null || cachegetUint8Memory0.buffer !== wasm.memory.buffer) {\n        cachegetUint8Memory0 = new Uint8Array(wasm.memory.buffer);\n    }\n    return cachegetUint8Memory0;\n}\n\nfunction getStringFromWasm0(ptr, len) {\n    return cachedTextDecoder.decode(getUint8Memory0().subarray(ptr, ptr + len));\n}\n/**\n*/\nexport const Cell = Object.freeze({ Dead:0,\"0\":\"Dead\",Alive:1,\"1\":\"Alive\", });\n/**\n*/\nexport const Movement = Object.freeze({ Up:0,\"0\":\"Up\",Right:1,\"1\":\"Right\",Down:2,\"2\":\"Down\",Left:3,\"3\":\"Left\", });\n/**\n*/\nexport class Ant {\n\n    __destroy_into_raw() {\n        const ptr = this.ptr;\n        this.ptr = 0;\n\n        return ptr;\n    }\n\n    free() {\n        const ptr = this.__destroy_into_raw();\n        wasm.__wbg_ant_free(ptr);\n    }\n}\n/**\n*/\nexport class Grid {\n\n    static __wrap(ptr) {\n        const obj = Object.create(Grid.prototype);\n        obj.ptr = ptr;\n\n        return obj;\n    }\n\n    __destroy_into_raw() {\n        const ptr = this.ptr;\n        this.ptr = 0;\n\n        return ptr;\n    }\n\n    free() {\n        const ptr = this.__destroy_into_raw();\n        wasm.__wbg_grid_free(ptr);\n    }\n    /**\n    * @param {number} width\n    * @param {number} height\n    * @returns {Grid}\n    */\n    static new(width, height) {\n        var ret = wasm.grid_new(width, height);\n        return Grid.__wrap(ret);\n    }\n    /**\n    * @returns {number}\n    */\n    getChanges() {\n        var ret = wasm.grid_getChanges(this.ptr);\n        return ret;\n    }\n    /**\n    * @returns {number}\n    */\n    getNumChanges() {\n        var ret = wasm.grid_getNumChanges(this.ptr);\n        return ret >>> 0;\n    }\n    /**\n    * @returns {number}\n    */\n    getAnts() {\n        var ret = wasm.grid_getAnts(this.ptr);\n        return ret;\n    }\n    /**\n    * @param {number} row\n    * @param {number} col\n    */\n    addAnt(row, col) {\n        wasm.grid_addAnt(this.ptr, row, col);\n    }\n    /**\n    */\n    moveAnts() {\n        wasm.grid_moveAnts(this.ptr);\n    }\n}\n\nexport function __wbindgen_throw(arg0, arg1) {\n    throw new Error(getStringFromWasm0(arg0, arg1));\n};\n\n","import { useEffect } from \"react\"\r\nimport { memory } from \"langtons-ant-algorithm/langtons_ant_algorithm_bg.wasm\"\r\nimport { Grid } from \"langtons-ant-algorithm\"\r\n\r\nconst colorDead = \"#FFFFFF\"\r\nconst colorAlive = \"#000000\"\r\nconst cols = 206\r\nconst rows = 106\r\nconst space = 0.5\r\nlet cellSpace: number\r\nlet cellSize: number\r\nlet canvas: HTMLCanvasElement\r\nlet context: CanvasRenderingContext2D\r\nlet board: Array<Array<number>>\r\nlet grid: Grid\r\n\r\nconst startGame = () => {\r\n  grid.moveAnts()\r\n  const numChanges = grid.getNumChanges()\r\n  let changes = new Uint32Array(memory.buffer, grid.getChanges(), numChanges)\r\n  for (let i = 0; i < numChanges; i++) {\r\n    const row = changes[i]\r\n    const col = changes[i + 1]\r\n    const state = board[row][col] ? 0 : 1\r\n    board[row][col] = state\r\n    context.fillStyle = state ? colorAlive : colorDead\r\n    const dx = cellSpace * col + space\r\n    const dy = cellSpace * row + space\r\n    context.fillRect(dx, dy, cellSize, cellSize)\r\n  }\r\n}\r\n\r\nconst loadGame = () => {\r\n  grid = Grid.new(rows, cols)\r\n  grid.addAnt(53, 103)\r\n  canvas = document.getElementById(\"canvas\") as HTMLCanvasElement\r\n  context = canvas.getContext(\"2d\") as CanvasRenderingContext2D\r\n  cellSpace = cellSize + space\r\n  canvas.width = cellSpace * cols + space\r\n  canvas.height = cellSpace * rows + space\r\n  board = Array.from(new Array(cols)).map(row => new Array(rows)) as Array<Array<number>>\r\n  for (let x = 0; x < cols; x++) {\r\n    for (let y = 0; y < rows; y++) {\r\n      //const state = y % 2 === 0 ? (x % 2 === 0 ? 0 : 1) : x % 2 === 0 ? 1 : 0\r\n      board[x][y] = 0\r\n      const dx = cellSpace * x + space\r\n      const dy = cellSpace * y + space\r\n      context.fillStyle = colorDead\r\n      context.fillRect(dx, dy, cellSize, cellSize)\r\n    }\r\n  }\r\n  setInterval(() => startGame(), 1)\r\n}\r\n\r\nconst Game = ({ stateCellSize }: { stateCellSize: any }) => {\r\n  useEffect(() => {\r\n    cellSize = stateCellSize.size\r\n    loadGame()\r\n  }, [stateCellSize])\r\n\r\n  return (\r\n    <main>\r\n      <section className=\"information\">\r\n        <ul>\r\n          <li>Ants: 1</li>\r\n          <li>Generation: 1959</li>\r\n          <li>Cells: 10</li>\r\n        </ul>\r\n      </section>\r\n      <section className=\"container\">\r\n        <div className=\"game-wrapper\">\r\n          <canvas id=\"canvas\"></canvas>\r\n        </div>\r\n      </section>\r\n    </main>\r\n  )\r\n}\r\n\r\nexport default Game\r\n","import { FaUserCircle } from \"react-icons/fa\"\r\nimport { AiFillGithub, AiOutlineTwitter } from \"react-icons/ai\"\r\n\r\nconst Footer = () => {\r\n  return (\r\n    <footer>\r\n      <section className=\"footer-container\">\r\n        <h3>By Alan Arriaga</h3>\r\n        <div className=\"options\">\r\n          <a href=\"https://github.com/A14Narriaga\" target=\"blank\">\r\n            <AiFillGithub />\r\n          </a>\r\n          <a href=\"https://a14narriaga.netlify.app/\" target=\"blank\">\r\n            <FaUserCircle />\r\n          </a>\r\n          <a href=\"https://twitter.com/A14Narriaga\" target=\"blank\">\r\n            <AiOutlineTwitter />\r\n          </a>\r\n        </div>\r\n      </section>\r\n    </footer>\r\n  )\r\n}\r\n\r\nexport default Footer\r\n","import { useState } from \"react\"\r\nimport { FaRegEdit, FaRegPlayCircle, FaRegPauseCircle } from \"react-icons/fa\"\r\nimport { BiZoomIn, BiZoomOut } from \"react-icons/bi\"\r\nimport { HiOutlineFolderDownload } from \"react-icons/hi\"\r\nimport { AiOutlineAreaChart, AiOutlineReload } from \"react-icons/ai\"\r\nimport { GiAnt } from \"react-icons/gi\"\r\n\r\nconst Header = ({ dispatchCellSize }: { dispatchCellSize: any }) => {\r\n  const [isRunning, setIsRunning] = useState(true)\r\n  const togglePlayBtn = () => (isRunning ? setIsRunning(false) : setIsRunning(true))\r\n\r\n  return (\r\n    <header>\r\n      <section className=\"header-container\">\r\n        <h1>Langton's ant</h1>\r\n        <div className=\"options\">\r\n          <li>\r\n            <a href=\"#!\">\r\n              <AiOutlineReload />\r\n            </a>\r\n          </li>\r\n          <li onClick={togglePlayBtn}>\r\n            <a href=\"#!\">{isRunning ? <FaRegPauseCircle /> : <FaRegPlayCircle />}</a>\r\n          </li>\r\n          <li onClick={() => dispatchCellSize({type: 'zoomIn'})}>\r\n            <a href=\"#!\">\r\n              <BiZoomIn />\r\n            </a>\r\n          </li>\r\n          <li onClick={() => dispatchCellSize({type: 'zoomOut'})}>\r\n            <a href=\"#!\">\r\n              <BiZoomOut />\r\n            </a>\r\n          </li>\r\n          <li>\r\n            <a href=\"#!\">\r\n              <GiAnt />\r\n            </a>\r\n          </li>\r\n          <li>\r\n            <a href=\"#!\">\r\n              <HiOutlineFolderDownload />\r\n            </a>\r\n          </li>\r\n          <li>\r\n            <a href=\"#!\">\r\n              <FaRegEdit />\r\n            </a>\r\n          </li>\r\n          <li>\r\n            <a href=\"#!\">\r\n              <AiOutlineAreaChart />\r\n            </a>\r\n          </li>\r\n        </div>\r\n      </section>\r\n    </header>\r\n  )\r\n}\r\n\r\nexport default Header\r\n","import { useReducer } from \"react\"\r\n\r\nimport \"../scss/App.scss\"\r\nimport Footer from \"./Footer\"\r\nimport Board from \"./Board\"\r\nimport Header from \"./Header\"\r\n\r\nfunction reducerCellSize(state: any, actions: any) {\r\n  switch (actions.type) {\r\n    case \"zoomIn\":\r\n      return { size: state.size + 1 }\r\n    case \"zoomOut\":\r\n      return { size: state.size === 4 ? state.size : state.size - 1 }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nconst App = () => {\r\n  const [stateCellSize, dispatchCellSize] = useReducer(reducerCellSize, { size: 4 })\r\n\r\n  return (\r\n    <>\r\n      <Header dispatchCellSize={dispatchCellSize} />\r\n      <Board stateCellSize={stateCellSize} />\r\n      <Footer />\r\n    </>\r\n  )\r\n}\r\n\r\nexport default App\r\n"],"sourceRoot":""}